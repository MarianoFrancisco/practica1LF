/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package proyecto1lenguajesformales;

import javax.swing.JOptionPane;

/**
 *
 * @author Mariano
 */
public class Interfaz extends javax.swing.JFrame {

    /**
     * Creates new form Interfaz
     */
    public Interfaz() {
        initComponents();
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        receptorValoresField = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        resultadoTextArea = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        analizador = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Practica 1 LF");

        jPanel1.setBackground(new java.awt.Color(0, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        receptorValoresField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                receptorValoresFieldActionPerformed(evt);
            }
        });
        jPanel1.add(receptorValoresField, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 50, 500, 90));

        resultadoTextArea.setColumns(20);
        resultadoTextArea.setRows(5);
        jScrollPane1.setViewportView(resultadoTextArea);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 180, 750, 280));

        jLabel1.setFont(new java.awt.Font("Engravers MT", 1, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setText("Resultados");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 160, -1, -1));

        jLabel2.setFont(new java.awt.Font("Engravers MT", 1, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setText("Ingreso de valores");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 30, -1, -1));

        analizador.setBackground(new java.awt.Color(255, 51, 51));
        analizador.setFont(new java.awt.Font("Engravers MT", 1, 12)); // NOI18N
        analizador.setForeground(new java.awt.Color(0, 0, 0));
        analizador.setText("Analizar");
        analizador.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                analizadorActionPerformed(evt);
            }
        });
        jPanel1.add(analizador, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 110, 130, -1));

        jLabel4.setForeground(new java.awt.Color(0, 0, 0));
        jLabel4.setText("y sea detectado por el programa");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 70, -1, -1));

        jLabel5.setForeground(new java.awt.Color(0, 0, 0));
        jLabel5.setText("©Mariano");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 470, -1, -1));

        jLabel6.setForeground(new java.awt.Color(0, 0, 0));
        jLabel6.setText("Instrucciones, utiliza una coma \",\" ");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 30, -1, -1));

        jLabel7.setForeground(new java.awt.Color(0, 0, 0));
        jLabel7.setText("o espacio \" \" para finalizar un token ");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 50, -1, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void receptorValoresFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_receptorValoresFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_receptorValoresFieldActionPerformed

    private void analizadorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_analizadorActionPerformed
        //creamos variables que nos serviran para el uso dentro de las condicionales
        String queDato;
        String queDatoAnterior;
        String palabra="";
        String receptorTexto=receptorValoresField.getText();//reestructuramos a una variable el contenido obtenido
        String almacenadorLetra;
        int tipoDato=4;
        if(receptorTexto.equals("")){
            JOptionPane.showMessageDialog(null, "Joven, necesita escribir un dato antes de poder analizar");
        }else{
        //creamos un nuevo clasificador utilizando un valor inicial para tomarlo
        Clasificador clasificador = new Clasificador(Enum.valueOf(tipoDato));
        resultadoTextArea.setText("");//inicializamos el text area
        //condicionales, ciclo con el que se repetirá hasta terminar de leer los caracteres que tenemos
        for (int i = 0; i < receptorTexto.length(); i++) {
            queDatoAnterior=clasificador.getEnumerador().getEvaluador();
            almacenadorLetra=receptorTexto.substring(i,i+1);
            //indicamos valores para cambio en nuestro enum segun el valor que este obtenga con tal caracter
            if(Character.isLetter(receptorTexto.charAt(i))){
                tipoDato=1;
            }else if(almacenadorLetra.equals(".")){
                tipoDato=2;
            }else if(Character.isDigit(receptorTexto.charAt(i))){
                tipoDato=3;
            }else if(almacenadorLetra.equals(" ")){
                tipoDato=5;
            }else if(almacenadorLetra.equals(",")){
                tipoDato=6;
            }else{
                /*condicionales de signos con posibilidad a fallar, ahora si esto llega a fallar lo que haremos
                sera imprimir en que se fallo e ir a por el siguiente dato
                */
                if(almacenadorLetra.equals("(")){
                    i++;
                    almacenadorLetra=receptorTexto.substring(i,i+1);
                    tipoDato=4;
                    if(almacenadorLetra.equals(")")){
                        resultadoTextArea.setText(resultadoTextArea.getText()+"\nSimbolo: "+"("+almacenadorLetra);
                    }else{
                        resultadoTextArea.setText(resultadoTextArea.getText()+"\nError "+"("+almacenadorLetra);
                    }
                }else if (almacenadorLetra.equals("[")){
                    i++;
                    almacenadorLetra=receptorTexto.substring(i,i+1);
                    tipoDato=4;
                    if(almacenadorLetra.equals("]")){
                        resultadoTextArea.setText(resultadoTextArea.getText()+"\nSimbolo: "+"["+almacenadorLetra);
                    }else{
                        resultadoTextArea.setText(resultadoTextArea.getText()+"\nError "+"["+almacenadorLetra);
                    }
                }else if (almacenadorLetra.equals("{")){
                    i++;
                    almacenadorLetra=receptorTexto.substring(i,i+1);
                    tipoDato=4;
                    if(almacenadorLetra.equals("}")){
                        resultadoTextArea.setText(resultadoTextArea.getText()+"\nSimbolo: "+"{"+almacenadorLetra);
                    }else{
                        resultadoTextArea.setText(resultadoTextArea.getText()+"\nError "+"{"+almacenadorLetra);
                    }
                }else if(almacenadorLetra.equals(";")){
                    tipoDato=4;
                    resultadoTextArea.setText(resultadoTextArea.getText()+"\nSimbolo: "+almacenadorLetra);
                }
            }
            /*aqui agarramos nuestro valor de enum para evaluar el contenido que este tiene y si cumple entonces se
            ejecutara determinada instruccion, ahora bien si esto llega a fallar imprimimos el fallo y reiniciamos
            la variable palabra para que podamos usarla de nuevo sin necesidad de crear otra
            cabe destacar que vemos todas las posibilidades de fallos para no perdernos de algo que haga el usuario
            */
            clasificador.setEnumerador(Enum.valueOf(tipoDato));
            queDato= clasificador.getEnumerador().getEvaluador();
            //condicional si es letra
            if(queDato.equals("letra")){
                palabra=palabra+almacenadorLetra;
                if(Character.isDigit(palabra.charAt(0))){
                    resultadoTextArea.setText(resultadoTextArea.getText()+"\nError: "+palabra);
                    palabra="";
                }
            }else if(queDato.equals("punto")){//condicional si es punto
                if(queDatoAnterior.equals("letra")){
                    resultadoTextArea.setText(resultadoTextArea.getText()+"\nError: "+palabra+almacenadorLetra);
                    palabra="";
                }else if(queDatoAnterior.equals("numero")){
                    if(palabra.contains(".")){
                        resultadoTextArea.setText(resultadoTextArea.getText()+"\nError: "+palabra+almacenadorLetra);
                        palabra="";
                    }else if(Character.isLetter(palabra.charAt(0))){
                        resultadoTextArea.setText(resultadoTextArea.getText()+"\nError: "+palabra+almacenadorLetra);
                        palabra="";
                    }else{
                        palabra=palabra+almacenadorLetra;
                    }           
                }
            }else if(queDato.equals("numero")){//condicional si es numero
                palabra=palabra+almacenadorLetra;
            }else if(almacenadorLetra.equals(",")||queDato.equals("espacio")){//verificamos si es , o espacio para terminar el token
                if(tipoDato==4){
                    //variable con la que no pasará nada porque al ser simbolo es aparte a esto
                }else{
                    if(palabra.equals("")){  
                }else{
                        if(Character.isLetter(palabra.charAt(0))){//imprimimos token identificador
                            resultadoTextArea.setText(resultadoTextArea.getText()+"\nIdentificador: "+palabra);
                            palabra="";
                            tipoDato=4;
                        }else if(Character.isDigit(palabra.charAt(0))){
                            if(palabra.contains(".")){
                                resultadoTextArea.setText(resultadoTextArea.getText()+"\nDecimal: "+palabra);//imprimimos token decimal
                            palabra="";
                            tipoDato=4;
                        }else{
                            resultadoTextArea.setText(resultadoTextArea.getText()+"\nEntero: "+palabra);//imprimimos token entero
                            palabra="";
                            tipoDato=4;
                        }
                        }    
                }
                }
            }
        }
        }
    }//GEN-LAST:event_analizadorActionPerformed

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton analizador;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField receptorValoresField;
    public static javax.swing.JTextArea resultadoTextArea;
    // End of variables declaration//GEN-END:variables
}
